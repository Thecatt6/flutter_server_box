# .github/workflows/build.yml
name: Build Flutter App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Permette di eseguire manualmente

jobs:
  # Job 1: Verifica e test
  analyze:
    name: Analyze and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0' # Specifica la versione che usi
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Run build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Analyze code
        run: flutter analyze

      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .
        continue-on-error: true # Non blocca se la formattazione non Ã¨ perfetta

      - name: Run tests
        run: flutter test
        continue-on-error: true # Non blocca se non ci sono test

  # Job 2: Build Android
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: analyze
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Run build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build APK
        run: flutter build apk --release

      - name: Build App Bundle
        run: flutter build appbundle --release

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload App Bundle
        uses: actions/upload-artifact@v3
        with:
          name: android-appbundle
          path: build/app/outputs/bundle/release/app-release.aab

  # Job 3: Build iOS (opzionale, richiede macOS runner)
  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: analyze
    if: false # Disabilitato di default, rimuovi questa riga per abilitare
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Run build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build iOS
        run: flutter build ios --release --no-codesign

      - name: Upload iOS Build
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: build/ios/iphoneos/

  # Job 4: Build Linux (opzionale)
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    needs: analyze
    if: false # Disabilitato di default
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true

      - name: Enable Linux desktop
        run: flutter config --enable-linux-desktop

      - name: Get dependencies
        run: flutter pub get

      - name: Run build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build Linux
        run: flutter build linux --release

      - name: Upload Linux Build
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: build/linux/x64/release/bundle/

  # Job 5: Create Release (solo su tag)
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-android]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download APK
        uses: actions/download-artifact@v3
        with:
          name: android-apk
          path: ./artifacts

      - name: Download App Bundle
        uses: actions/download-artifact@v3
        with:
          name: android-appbundle
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/app-release.apk
            ./artifacts/app-release.aab
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
