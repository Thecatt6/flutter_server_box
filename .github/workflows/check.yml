# .github/workflows/check.yml
# Workflow leggero per controllare velocemente il codice
name: Quick Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  check:
    name: Flutter Check
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üîß Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true

      - name: üì¶ Get dependencies
        run: flutter pub get

      - name: üèóÔ∏è Generate code (build_runner)
        run: |
          flutter pub run build_runner build --delete-conflicting-outputs
          echo "‚úÖ Build runner completed"

      - name: üîç Verify generated files
        run: |
          if [ ! -f "lib/data/model/quick_command.g.dart" ]; then
            echo "‚ùå Error: quick_command.g.dart not generated!"
            exit 1
          fi
          echo "‚úÖ Generated files found"

      - name: üìä Analyze code
        run: |
          flutter analyze > analyze_output.txt 2>&1 || true
          cat analyze_output.txt
          
          # Controlla se ci sono errori critici
          if grep -q "error ‚Ä¢" analyze_output.txt; then
            echo "‚ùå Found errors in code analysis"
            exit 1
          fi
          echo "‚úÖ No critical errors found"

      - name: üé® Check formatting
        run: |
          dart format --output=none --set-exit-if-changed . || echo "‚ö†Ô∏è Code needs formatting"
        continue-on-error: true

      - name: üß™ Run tests
        run: flutter test || echo "‚ö†Ô∏è Some tests failed"
        continue-on-error: true

      - name: ‚úÖ Summary
        if: always()
        run: |
          echo "=========================================="
          echo "‚úÖ Code check completed!"
          echo "=========================================="
          echo "Check the logs above for any warnings."
